services:
  n8n-mcp:
    # image: ghcr.io/czlonkowski/n8n-mcp:latest
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: n8n-mcp
    restart: unless-stopped
    user: 1000:1000
    environment:
      MCP_MODE: ${MCP_MODE:-http}
      USE_FIXED_HTTP: ${USE_FIXED_HTTP:-true}
      AUTH_TOKEN: ${AUTH_TOKEN:?AUTH_TOKEN is required}
      NODE_ENV: ${NODE_ENV:-production}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      PORT: ${PORT:-3000}
      NODE_DB_PATH: ${NODE_DB_PATH:-/app/data/nodes.db}
      REBUILD_ON_START: ${REBUILD_ON_START:-false}
      N8N_API_URL: ${N8N_API_URL}
      N8N_API_KEY: ${N8N_API_KEY}
      TRUST_PROXY: ${TRUST_PROXY}
    volumes:
      - ./n8n-mcp-data:/app/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.mcp-n8n.rule=Host(`n8n-mcp.reacted-domain.com)
      # - traefik.http.routers.mcp-n8n.rule=Host(`n8n-mcp.reacted-domain.com`) && PathPrefix(`/n8n`)
      # - traefik.http.routers.mcp-n8n.middlewares=n8n-stripprefix
      # - traefik.http.middlewares.n8n-stripprefix.stripprefix.prefixes=/n8n
      - traefik.http.routers.mcp-n8n.tls=true
      - traefik.http.routers.mcp-n8n.entrypoints=websecure
      - traefik.http.routers.mcp-n8n.tls.certresolver=letsencrypt
      - traefik.http.services.mcp-n8n.loadbalancer.server.port=3000
    networks:
      - proxied
networks:
  proxied:
    external: true